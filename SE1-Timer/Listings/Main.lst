C51 COMPILER V9.60.7.0   MAIN                                                              03/23/2023 15:27:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\Main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Main
                    -.lst) TABS(2) OBJECT(.\Objects\Main.obj)

line level    source

   1          #include<REG51.h>
   2          
   3          sbit LED1 = P2^7;
   4          sbit LED2 = P2^0;
   5          
   6          /*
   7          Timer: A timer is a clock that controls the sequence of an event while counting in fixed intervals of time
   8          AT89C51 microcontroller has two Timers designated as Timer0 and Timer1.
   9          Each of these timers is assigned a 16-bit register
  10          So the maximum allowed counts in value of Timer registers can be from 0000H to FFFFH
  11          */
  12          void TM01Delay(void);
  13          void TM02Delay(void);
  14          
  15          void main(void) {
  16   1        
  17   1        for(;;)
  18   1        {
  19   2          // LED 1
  20   2          /*LED1 = 0;
  21   2          TM01Delay();
  22   2          LED1 = 1;
  23   2          TM01Delay();*/
  24   2          // LED 2
  25   2          LED2 = 0;
  26   2          TM02Delay();
  27   2          LED2 = 1;
  28   2          TM02Delay();
  29   2        }
  30   1        
  31   1        
  32   1      }
  33          
  34          void TM01Delay(void) {
  35   1        
  36   1        unsigned char z;
  37   1        
  38   1        for(z = 0 ; z < 15 ; z++)
  39   1        {
  40   2          TMOD = 0x01;  // Set Timer 0 Mode 1 (16-bit mode)
  41   2          
  42   2          /*
  43   2            TMOD = 2 * (Gate , C/T , M1 , M0)
  44   2            4 less bits for Timer0
  45   2            Gate = 1 : 
  46   2            C/T = 0 : Timer updates its value automatically corresponding to 8051 clock source , = 1 : it updates i
             -ts value when it receives pulse from outside the 8051 controller
  47   2            M0, M1 : Timer modes 0, 1, 2 and 3 (00 , 01 , 10 , 11) 
  48   2          */
  49   2          
  50   2          TL0 = 0x00;   // Initial Lower Value
  51   2          TH0 = 0x65;   // Initial Higher Value
  52   2          
  53   2          /*
C51 COMPILER V9.60.7.0   MAIN                                                              03/23/2023 15:27:02 PAGE 2   

  54   2            Delay = (MaxValue FFFF - count + 1) * cycle
  55   2            cycle = 1.085 ms
  56   2            external clock = 12 MHz => internal clock = 1/12 external clock = 1 MHz
  57   2          */
  58   2          
  59   2          TR0 = 1;      // Start Timer 0
  60   2          while(TF0 == 0);  // wait until timer overflow
  61   2          
  62   2          TR0 = 0;  // Clear Timer run
  63   2          TF0 = 0;  // Cleat Timer flag
  64   2        }
  65   1      }
  66          
  67          void TM02Delay(void)
  68          {
  69   1        unsigned char z;
  70   1        
  71   1        for(z = 0 ; z < 100 ; z++)
  72   1        {
  73   2          TMOD = 0x02;    // Set Timer 0 Mode 1 (8-bit mode)
  74   2          TH0 = 01;     // Load in TH0 only , because it's a 8-bit mode
  75   2          TR0 = 1;        // Start Timer
  76   2          
  77   2          while(TF0 == 0); // wait
  78   2          
  79   2          TR0 = 0;    // Clear Timer run
  80   2          TF0 = 0;    // Clear Timer flag
  81   2          
  82   2        }
  83   1        
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     59    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
